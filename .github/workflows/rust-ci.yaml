name: Rust CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  ci:
    name: Build & Test syndicode-server
    runs-on: ubuntu-latest

    strategy:
      matrix:
        rust: [stable]

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y protobuf-compiler

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            syndicode-server/target
          key: ${{ runner.os }}-cargo-${{ matrix.rust }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ matrix.rust }}-

      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          components: clippy, rustfmt

      - name: Check formatting
        run: cargo fmt --package syndicode-server --package syndicode-client -- --check

      - name: Lint with Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Build
        run: cargo build --manifest-path syndicode-server/Cargo.toml --verbose

      - name: Run tests
        run: cargo test --manifest-path syndicode-server/Cargo.toml --verbose
