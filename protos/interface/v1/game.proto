syntax = "proto3";

package syndicode_interface_v1;

import "google/protobuf/timestamp.proto";
import "economy/v1/economy.proto";
import "warfare/v1/warfare.proto";
import "interface/v1/shared.proto";

// Main entry point for player actions and game updates.
service GameService {
  // Bidirectional stream where players send actions and receive updates.
  rpc PlayStream(stream PlayerAction) returns (stream GameUpdate);
}

// Represents an action sent by a player.
message PlayerAction {
  // UUID generated on the client to make the request trackable.
  string request_uuid = 1;
  oneof action {
    // Request to fetch corporation data.
    syndicode_economy_v1.GetCorporationRequest get_corporation = 2;

    // Request to spawn a new unit.
    syndicode_warfare_v1.SpawnUnitRequest spawn_unit = 3;

    // Request to list currently active units.
    syndicode_warfare_v1.ListUnitsRequest list_unit = 4;

    // Acquire a business that has been listed for sale.
    syndicode_economy_v1.AcquireListedBusinessRequest acquire_listed_business = 5;

    // Request to query business listings.
    syndicode_economy_v1.QueryBusinessListingsRequest query_business_listings = 6;

    // Request to query businesses.
    syndicode_economy_v1.QueryBusinessesRequest query_businesses = 7;
  }
}

// Represents an update sent to the client in response to a player action.
message GameUpdate {
  // The tick for which the update is relevant.
  int64 game_tick = 1;
  oneof update {
    // Acknowledges receipt and queuing of a player command.
    ActionInitResponse action_init_response = 2;

    // Response indicating that an action has failed.
    ActionFailedResponse action_failed_response = 3;

    // Notifies the client that their rate limit has been exceeded.
    RateLimitExceededNotification rate_limit_exceeded = 4;

    // Periodical notification of game tick progression.
    TickNotification tick_notification = 5;

    // Response containing corporation data.
    syndicode_economy_v1.GetCorporationResponse get_corporation = 6;

    // Response listing all units.
    syndicode_warfare_v1.ListUnitsResponse list_units = 7;

    // Response with the data of the newly spawned unit.
    syndicode_warfare_v1.SpawnUnitResponse spawn_unit = 8;

    // Response with the data of the newly acquired business.
    syndicode_economy_v1.AcquireListedBusinessResponse acquire_listed_business = 9;

    // Response containing queried business listings.
    syndicode_economy_v1.QueryBusinessListingsResponse query_business_listings = 10;

    // Response containing queried businesses.
    syndicode_economy_v1.QueryBusinessesResponse query_businesses = 13; 

    // Response containing the newly created corporation.
    syndicode_economy_v1.CreateCorporationResponse create_corporation = 11;

    // Response notifying about the deletion of a corporation..
    syndicode_economy_v1.DeleteCorporationResponse delete_corporation = 12;
  }
}

// Response returned for actions that failed to process.
message ActionFailedResponse {
  // UUID generated on the client to match the response with the initial request.
  string request_uuid = 1;

  // The reason why the action failed to process.
  string reason = 2;
}

// Notifies the user that their rate limit has been exceeded.
message RateLimitExceededNotification {
  // Human-readable message.
  string message = 2;
}

// Notifies the client that the authoritative game tick has advanced.
message TickNotification {
  // Timestamp when this tick became effective on the server.
  google.protobuf.Timestamp effective_at = 1;
}
